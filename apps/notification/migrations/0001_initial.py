# Generated by Django 5.2.5 on 2025-10-02 03:08

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="NotificationEvent",
            fields=[
                (
                    "event_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "event_type",
                    models.CharField(
                        choices=[
                            ("symbol_signal", "Symbol Signal"),
                            ("payment_success", "Payment Success"),
                            ("payment_failed", "Payment Failed"),
                            ("order_created", "Order Created"),
                            ("order_filled", "Order Filled"),
                            ("subscription_expiring", "Subscription Expiring"),
                        ],
                        help_text="Loại sự kiện nghiệp vụ cần gửi thông báo",
                        max_length=50,
                    ),
                ),
                (
                    "subject_id",
                    models.UUIDField(
                        blank=True,
                        help_text="ID thực thể liên quan: order_id/payment_id/signal_id...",
                        null=True,
                    ),
                ),
                (
                    "payload",
                    models.JSONField(
                        blank=True,
                        help_text="Dữ liệu để render tin nhắn (template)",
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "processed",
                    models.BooleanField(
                        default=False,
                        help_text="Đã phát lệnh gửi tới các endpoint chưa",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notification_events",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "pay_notification_events",
            },
        ),
        migrations.CreateModel(
            name="UserEndpoint",
            fields=[
                (
                    "endpoint_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "channel",
                    models.CharField(
                        choices=[
                            ("telegram", "Telegram"),
                            ("zalo", "Zalo"),
                            ("email", "Email"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "address",
                    models.TextField(
                        help_text="Telegram chat_id | Zalo user_id | email"
                    ),
                ),
                (
                    "details",
                    models.JSONField(
                        blank=True,
                        help_text="Thông tin phụ: username, OA id...",
                        null=True,
                    ),
                ),
                (
                    "is_primary",
                    models.BooleanField(
                        default=False, help_text="Đánh dấu endpoint mặc định"
                    ),
                ),
                (
                    "verified",
                    models.BooleanField(
                        default=False,
                        help_text="Đã xác thực (OTP/symbol start) hay chưa",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notification_endpoints",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "pay_user_endpoints",
            },
        ),
        migrations.CreateModel(
            name="NotificationDelivery",
            fields=[
                (
                    "delivery_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "channel",
                    models.CharField(
                        choices=[
                            ("telegram", "Telegram"),
                            ("zalo", "Zalo"),
                            ("email", "Email"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("queued", "Queued"),
                            ("sending", "Sending"),
                            ("sent", "Sent"),
                            ("failed", "Failed"),
                            ("retrying", "Retrying"),
                        ],
                        default="queued",
                        max_length=20,
                    ),
                ),
                ("sent_at", models.DateTimeField(blank=True, null=True)),
                (
                    "response_raw",
                    models.JSONField(
                        blank=True,
                        help_text="Phản hồi từ API Telegram/Zalo/Email",
                        null=True,
                    ),
                ),
                ("error_message", models.TextField(blank=True, null=True)),
                (
                    "event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="deliveries",
                        to="notification.notificationevent",
                    ),
                ),
                (
                    "endpoint",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="deliveries",
                        to="notification.userendpoint",
                    ),
                ),
            ],
            options={
                "db_table": "pay_notification_deliveries",
            },
        ),
        migrations.AddIndex(
            model_name="notificationevent",
            index=models.Index(
                fields=["user", "event_type"], name="pay_notific_user_id_811dd3_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="notificationevent",
            index=models.Index(
                fields=["processed", "created_at"],
                name="pay_notific_process_1c15c5_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="userendpoint",
            index=models.Index(
                fields=["user", "channel", "address"],
                name="pay_user_en_user_id_a37715_idx",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="userendpoint",
            unique_together={("user", "channel", "address")},
        ),
        migrations.AddIndex(
            model_name="notificationdelivery",
            index=models.Index(fields=["event"], name="pay_notific_event_i_3fd24f_idx"),
        ),
        migrations.AddIndex(
            model_name="notificationdelivery",
            index=models.Index(
                fields=["endpoint"], name="pay_notific_endpoin_bb75d9_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="notificationdelivery",
            index=models.Index(
                fields=["status", "sent_at"], name="pay_notific_status_dc0c07_idx"
            ),
        ),
    ]
