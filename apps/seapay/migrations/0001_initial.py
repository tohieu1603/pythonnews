# Generated by Django 5.2.5 on 2025-09-26 04:50

import django.db.models.deletion
import django.utils.timezone
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="PayWallet",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "balance",
                    models.DecimalField(
                        db_comment="SÃ¡Â»â€˜ dÃ†Â° hiÃ¡Â»â€¡n tÃ¡ÂºÂ¡i, chÃ¡Â»â€° cÃ¡ÂºÂ\xadp nhÃ¡ÂºÂ\xadt qua ledger",
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=18,
                    ),
                ),
                (
                    "currency",
                    models.CharField(
                        choices=[("VND", "Vietnamese Dong"), ("USD", "US Dollar")],
                        db_comment="LoÃ¡ÂºÂ¡i tiÃ¡Â»Â\x81n (VNÃ„Â\x90, USD...)",
                        default="VND",
                        max_length=10,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[("active", "Active"), ("suspended", "Suspended")],
                        db_comment="active | suspended (khÃƒÂ³a tÃ¡ÂºÂ¡m thÃ¡Â»Â\x9di)",
                        default="active",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "pay_wallets",
                "db_table_comment": "MÃ¡Â»â€”i user cÃƒÂ³ 1 vÃƒÂ\xad / 1 loÃ¡ÂºÂ¡i tiÃ¡Â»Â\x81n. TÃ¡ÂºÂ¥t cÃ¡ÂºÂ£ thay Ã„â€˜Ã¡Â»â€¢i sÃ¡Â»â€˜ dÃ†Â° Ã„â€˜i qua pay_wallet_ledger.",
            },
        ),
        migrations.CreateModel(
            name="PayWalletLedger",
            fields=[
                (
                    "ledger_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "tx_type",
                    models.CharField(
                        choices=[
                            ("deposit", "NÃ¡ÂºÂ¡p tiÃ¡Â»Â\x81n (tÃ¡Â»Â« SePay)"),
                            ("purchase", "Mua bot"),
                            ("refund", "HoÃƒÂ\xa0n tiÃ¡Â»Â\x81n"),
                            ("withdrawal", "RÃƒÂºt tiÃ¡Â»Â\x81n"),
                            ("transfer_in", "ChuyÃ¡Â»Æ’n Ã„â€˜Ã¡ÂºÂ¿n"),
                            ("transfer_out", "ChuyÃ¡Â»Æ’n Ã„â€˜i"),
                        ],
                        db_comment="LoÃ¡ÂºÂ¡i biÃ¡ÂºÂ¿n Ã„â€˜Ã¡Â»â„¢ng: nÃ¡ÂºÂ¡p/purchase/hoÃƒÂ\xa0n tiÃ¡Â»Â\x81n/...",
                        max_length=20,
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(
                        db_comment="LuÃƒÂ´n > 0; chiÃ¡Â»Â\x81u thÃ¡Â»Æ’ hiÃ¡Â»â€¡n bÃ¡ÂºÂ±ng is_credit",
                        decimal_places=2,
                        max_digits=18,
                    ),
                ),
                (
                    "is_credit",
                    models.BooleanField(
                        db_comment="true: cÃ¡Â»â„¢ng vÃƒÂ\xad; false: trÃ¡Â»Â« vÃƒÂ\xad"
                    ),
                ),
                (
                    "balance_before",
                    models.DecimalField(
                        db_comment="SÃ¡Â»â€˜ dÃ†Â° trÃ†Â°Ã¡Â»â€ºc giao dÃ¡Â»â€¹ch",
                        decimal_places=2,
                        max_digits=18,
                    ),
                ),
                (
                    "balance_after",
                    models.DecimalField(
                        db_comment="SÃ¡Â»â€˜ dÃ†Â° ngay sau giao dÃ¡Â»â€¹ch nÃƒÂ\xa0y",
                        decimal_places=2,
                        max_digits=18,
                    ),
                ),
                (
                    "note",
                    models.TextField(
                        blank=True,
                        db_comment="DiÃ¡Â»â€¦n giÃ¡ÂºÂ£i ngÃ¡ÂºÂ¯n gÃ¡Â»Â\x8dn cho bÃ¡ÂºÂ£n ghi sÃ¡Â»â€¢ cÃƒÂ¡i",
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True,
                        db_comment="Payload bÃ¡Â»â€¢ sung: ip, device, source, ...",
                        default=dict,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "db_table": "pay_wallet_ledger",
                "db_table_comment": "Quy tÃ¡ÂºÂ¯c: deposit phÃ¡ÂºÂ£i cÃƒÂ³ payment_id (SePay); purchase phÃ¡ÂºÂ£i cÃƒÂ³ order_id. SÃ¡Â»â€¢ cÃƒÂ¡i lÃƒÂ\xa0 nguÃ¡Â»â€œn sÃ¡Â»Â± thÃ¡ÂºÂ\xadt Ã„â€˜Ã¡Â»Æ’ tÃƒÂ\xadnh balance.",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="SeapayOrder",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PayOrder",
            fields=[
                (
                    "order_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "total_amount",
                    models.DecimalField(
                        db_comment="TÃ¡Â»â€¢ng giÃƒÂ¡ trÃ¡Â»â€¹ Ã„â€˜Ã†Â¡n hÃƒÂ\xa0ng",
                        decimal_places=2,
                        max_digits=18,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("paid", "Paid"),
                            ("cancelled", "Cancelled"),
                            ("expired", "Expired"),
                        ],
                        db_comment="TrÃ¡ÂºÂ¡ng thÃƒÂ¡i Ã„â€˜Ã†Â¡n hÃƒÂ\xa0ng",
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, db_comment="MÃƒÂ´ tÃ¡ÂºÂ£ Ã„â€˜Ã†Â¡n hÃƒÂ\xa0ng"
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True,
                        db_comment="DÃ¡Â»Â¯ liÃ¡Â»â€¡u bÃ¡Â»â€¢ sung cÃ¡Â»Â§a Ã„â€˜Ã†Â¡n hÃƒÂ\xa0ng",
                        default=dict,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        db_comment="NgÃ†Â°Ã¡Â»Â\x9di tÃ¡ÂºÂ¡o Ã„â€˜Ã†Â¡n hÃƒÂ\xa0ng",
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "pay_orders",
                "db_table_comment": "Ã„Â\x90Ã†Â¡n hÃƒÂ\xa0ng cÃƒÂ³ thÃ¡Â»Æ’ Ã„â€˜Ã†Â°Ã¡Â»Â£c thanh toÃƒÂ¡n qua payment intents.",
            },
        ),
        migrations.CreateModel(
            name="PayPaymentIntent",
            fields=[
                (
                    "intent_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "purpose",
                    models.CharField(
                        choices=[
                            ("wallet_topup", "Wallet Top-up"),
                            ("order_payment", "Order Payment"),
                            ("symbol_purchase", "Symbol Purchase"),
                            ("withdraw", "Withdraw"),
                        ],
                        db_comment="wallet_topup (nÃ¡ÂºÂ¡p vÃƒÂ\xad) | order_payment (mua trÃ¡Â»Â±c tiÃ¡ÂºÂ¿p)",
                        max_length=20,
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(
                        db_comment="SÃ¡Â»â€˜ tiÃ¡Â»Â\x81n phÃ¡ÂºÂ£i trÃ¡ÂºÂ£",
                        decimal_places=2,
                        max_digits=18,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("requires_payment_method", "Requires Payment Method"),
                            ("processing", "Processing"),
                            ("succeeded", "Succeeded"),
                            ("failed", "Failed"),
                            ("expired", "Expired"),
                        ],
                        db_comment="TrÃ¡ÂºÂ¡ng thÃƒÂ¡i luÃ¡Â»â€œng thanh toÃƒÂ¡n",
                        default="requires_payment_method",
                        max_length=30,
                    ),
                ),
                (
                    "order_code",
                    models.CharField(
                        db_comment="ChuÃ¡Â»â€”i Ã„â€˜Ã¡Â»â€˜i soÃƒÂ¡t CK (nÃ¡Â»â„¢i dung chuyÃ¡Â»Æ’n khoÃ¡ÂºÂ£n). CÃ¡ÂºÂ§n duy nhÃ¡ÂºÂ¥t Ã„â€˜Ã¡Â»Æ’ match.",
                        max_length=255,
                        unique=True,
                    ),
                ),
                (
                    "reference_code",
                    models.CharField(
                        blank=True,
                        db_comment="Reference code returned by provider for reconciliation",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "return_url",
                    models.TextField(
                        blank=True,
                        db_comment="URL trÃ¡Â»Å¸ vÃ¡Â»Â\x81 khi thanh toÃƒÂ¡n xong (nÃ¡ÂºÂ¿u dÃƒÂ¹ng webflow)",
                        null=True,
                    ),
                ),
                (
                    "cancel_url",
                    models.TextField(
                        blank=True,
                        db_comment="URL trÃ¡Â»Å¸ vÃ¡Â»Â\x81 khi hÃ¡Â»Â§y",
                        null=True,
                    ),
                ),
                (
                    "expires_at",
                    models.DateTimeField(
                        blank=True,
                        db_comment="HÃ¡ÂºÂ¡n sÃ¡Â»Â\xad dÃ¡Â»Â¥ng intent/QR",
                        null=True,
                    ),
                ),
                (
                    "qr_code_url",
                    models.TextField(
                        blank=True, db_comment="QR code URL for payment", null=True
                    ),
                ),
                (
                    "deep_link",
                    models.TextField(
                        blank=True, db_comment="Deep link for mobile payment", null=True
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True,
                        db_comment="Payload bÃ¡Â»â€¢ sung (IP, UA, campaign...)",
                        default=dict,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        db_comment="Ai Ã„â€˜ang thanh toÃƒÂ¡n",
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "pay_payment_intents",
                "db_table_comment": "MÃ¡Â»â„¢t yÃƒÂªu cÃ¡ÂºÂ§u thu tiÃ¡Â»Â\x81n. Provider cÃ¡Â»â€˜ Ã„â€˜Ã¡Â»â€¹nh lÃƒÂ\xa0 SePay (chÃƒÂ\xadnh sÃƒÂ¡ch hÃ¡Â»â€¡ thÃ¡Â»â€˜ng).",
            },
        ),
        migrations.CreateModel(
            name="PayPaymentAttempt",
            fields=[
                (
                    "attempt_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("requires_payment_method", "Requires Payment Method"),
                            ("processing", "Processing"),
                            ("succeeded", "Succeeded"),
                            ("failed", "Failed"),
                            ("expired", "Expired"),
                        ],
                        db_comment="TiÃ¡ÂºÂ¿n trÃƒÂ¬nh attempt",
                        default="requires_payment_method",
                        max_length=30,
                    ),
                ),
                (
                    "bank_code",
                    models.CharField(
                        blank=True,
                        db_comment="VCB/MB/BIDV... (SePay)",
                        max_length=10,
                        null=True,
                    ),
                ),
                (
                    "account_number",
                    models.CharField(
                        blank=True,
                        db_comment="STK nhÃ¡ÂºÂ\xadn hoÃ¡ÂºÂ·c VA theo Ã„â€˜Ã†Â¡n",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "account_name",
                    models.CharField(
                        blank=True,
                        db_comment="TÃƒÂªn tÃƒÂ\xa0i khoÃ¡ÂºÂ£n nhÃ¡ÂºÂ\xadn",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "transfer_content",
                    models.TextField(
                        blank=True,
                        db_comment="NÃ¡Â»â„¢i dung CK chÃƒÂ\xadnh xÃƒÂ¡c Ã„â€˜Ã¡Â»Æ’ auto-match",
                        null=True,
                    ),
                ),
                (
                    "transfer_amount",
                    models.DecimalField(
                        blank=True,
                        db_comment="SÃ¡Â»â€˜ tiÃ¡Â»Â\x81n hiÃ¡Â»Æ’n thÃ¡Â»â€¹ trÃƒÂªn QR (cÃƒÂ³ thÃ¡Â»Æ’ khÃƒÂ³a cÃ¡Â»Â©ng)",
                        decimal_places=2,
                        max_digits=18,
                        null=True,
                    ),
                ),
                (
                    "qr_image_url",
                    models.TextField(
                        blank=True,
                        db_comment="Link Ã¡ÂºÂ£nh QR Ã„â€˜Ã¡Â»â„¢ng VietQR (SePay)",
                        null=True,
                    ),
                ),
                (
                    "qr_svg",
                    models.TextField(
                        blank=True,
                        db_comment="DÃ¡Â»Â¯ liÃ¡Â»â€¡u SVG QR nÃ¡ÂºÂ¿u render trÃ¡Â»Â±c tiÃ¡ÂºÂ¿p",
                        null=True,
                    ),
                ),
                (
                    "provider_session_id",
                    models.CharField(
                        blank=True,
                        db_comment="MÃƒÂ£ phiÃƒÂªn/khoÃƒÂ¡ phÃƒÂ\xada SePay nÃ¡ÂºÂ¿u cÃƒÂ³",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "expires_at",
                    models.DateTimeField(
                        blank=True,
                        db_comment="HÃ¡ÂºÂ¿t hÃ¡ÂºÂ¡n phiÃƒÂªn attempt/QR",
                        null=True,
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True, db_comment="Payload bÃ¡Â»â€¢ sung", default=dict
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "intent",
                    models.ForeignKey(
                        db_comment="ThuÃ¡Â»â„¢c intent nÃƒÂ\xa0o",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="seapay.paypaymentintent",
                    ),
                ),
            ],
            options={
                "db_table": "pay_payment_attempts",
                "db_table_comment": "MÃ¡Â»â„¢t intent cÃƒÂ³ thÃ¡Â»Æ’ cÃƒÂ³ nhiÃ¡Â»Â\x81u attempt (tÃ¡ÂºÂ¡o lÃ¡ÂºÂ¡i QR, Ã„â€˜Ã¡Â»â€¢i sÃ¡Â»â€˜ tiÃ¡Â»Â\x81n...). Provider cÃ¡Â»â€˜ Ã„â€˜Ã¡Â»â€¹nh: SePay.",
            },
        ),
        migrations.CreateModel(
            name="PayPayment",
            fields=[
                (
                    "payment_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(
                        db_comment="SÃ¡Â»â€˜ tiÃ¡Â»Â\x81n thanh toÃƒÂ¡n",
                        decimal_places=2,
                        max_digits=18,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("requires_payment_method", "Requires Payment Method"),
                            ("processing", "Processing"),
                            ("succeeded", "Succeeded"),
                            ("failed", "Failed"),
                            ("expired", "Expired"),
                        ],
                        db_comment="TrÃ¡ÂºÂ¡ng thÃƒÂ¡i chÃ¡Â»â€˜t sau khi Ã„â€˜Ã¡Â»â€˜i soÃƒÂ¡t",
                        default="processing",
                        max_length=30,
                    ),
                ),
                (
                    "provider_payment_id",
                    models.CharField(
                        blank=True,
                        db_comment="ID giao dÃ¡Â»â€¹ch SePay (sepay_tx_id) Ã„â€˜Ã¡Â»Æ’ tra soÃƒÂ¡t",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "message",
                    models.TextField(
                        blank=True,
                        db_comment="Ghi chÃƒÂº trÃ¡ÂºÂ¡ng thÃƒÂ¡i (VD: LÃƒÂ½ do failed)",
                        null=True,
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True,
                        db_comment="Payload bÃ¡Â»â€¢ sung (bÃ¡ÂºÂ£n Ã„â€˜Ã¡Â»â€œ Ã„â€˜Ã¡Â»â€˜i soÃƒÂ¡t, sai sÃ¡Â»â€˜...)",
                        default=dict,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        db_comment="NgÃ†Â°Ã¡Â»Â\x9di thÃ¡Â»Â±c hiÃ¡Â»â€¡n thanh toÃƒÂ¡n",
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "intent",
                    models.ForeignKey(
                        blank=True,
                        db_comment="Intent dÃ¡ÂºÂ«n Ã„â€˜Ã¡ÂºÂ¿n payment nÃƒÂ\xa0y",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="seapay.paypaymentintent",
                    ),
                ),
            ],
            options={
                "db_table": "pay_payments",
                "db_table_comment": "BÃƒÂºt toÃƒÂ¡n thanh toÃƒÂ¡n Ã¡Â»Å¸ cÃ¡ÂºÂ¥p gateway. Khi succeeded: nÃ¡ÂºÂ¿u lÃƒÂ\xa0 nÃ¡ÂºÂ¡p vÃƒÂ\xad Ã¢â€\xa0â€™ ghi credit ledger; nÃ¡ÂºÂ¿u lÃƒÂ\xa0 order Ã¢â€\xa0â€™ chuyÃ¡Â»Æ’n order sang paid, cÃ¡ÂºÂ¥p license.",
            },
        ),
        migrations.CreateModel(
            name="PayBankTransaction",
            fields=[
                (
                    "sepay_tx_id",
                    models.BigIntegerField(
                        db_comment="KhÃ¡Â»â€ºp vÃ¡Â»â€ºi provider_payment_id khi Ã„â€˜ÃƒÂ£ xÃ¡Â»Â\xad lÃƒÂ½",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "transaction_date",
                    models.DateTimeField(
                        db_comment="ThÃ¡Â»Â\x9di gian giao dÃ¡Â»â€¹ch ngÃƒÂ¢n hÃƒÂ\xa0ng"
                    ),
                ),
                (
                    "account_number",
                    models.CharField(
                        db_comment="STK nhÃ¡ÂºÂ\xadn tiÃ¡Â»Â\x81n", max_length=50
                    ),
                ),
                (
                    "amount_in",
                    models.DecimalField(
                        db_comment="TiÃ¡Â»Â\x81n vÃƒÂ\xa0o (nÃ¡ÂºÂ¡p vÃƒÂ\xad/ thanh toÃƒÂ¡n)",
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=20,
                    ),
                ),
                (
                    "amount_out",
                    models.DecimalField(
                        db_comment="TiÃ¡Â»Â\x81n ra (ÃƒÂ\xadt dÃƒÂ¹ng)",
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=20,
                    ),
                ),
                (
                    "content",
                    models.TextField(
                        blank=True,
                        db_comment="NÃ¡Â»â„¢i dung CK (chÃ¡Â»Â©a order_code Ã„â€˜Ã¡Â»Æ’ auto-match)",
                        null=True,
                    ),
                ),
                (
                    "reference_number",
                    models.CharField(
                        blank=True,
                        db_comment="MÃƒÂ£ tham chiÃ¡ÂºÂ¿u cÃ¡Â»Â§a ngÃƒÂ¢n hÃƒÂ\xa0ng",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "bank_code",
                    models.CharField(
                        blank=True,
                        db_comment="VCB/MB/BIDV...",
                        max_length=10,
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "payment",
                    models.ForeignKey(
                        blank=True,
                        db_comment="Payment Ã„â€˜Ã†Â°Ã¡Â»Â£c tÃ¡ÂºÂ¡o/chÃ¡Â»â€˜t tÃ¡Â»Â« giao dÃ¡Â»â€¹ch nÃƒÂ\xa0y",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="seapay.paypayment",
                    ),
                ),
                (
                    "attempt",
                    models.ForeignKey(
                        blank=True,
                        db_comment="KhÃ¡Â»â€ºp Ã„â€˜Ã†Â°Ã¡Â»Â£c attempt nÃƒÂ\xa0o",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="seapay.paypaymentattempt",
                    ),
                ),
                (
                    "intent",
                    models.ForeignKey(
                        blank=True,
                        db_comment="KhÃ¡Â»â€ºp Ã„â€˜Ã†Â°Ã¡Â»Â£c intent nÃƒÂ\xa0o",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="seapay.paypaymentintent",
                    ),
                ),
            ],
            options={
                "db_table": "pay_bank_transactions",
                "db_table_comment": "BÃ¡ÂºÂ£ng Ã„â€˜Ã¡Â»â€˜i soÃƒÂ¡t chÃ¡Â»Â§ Ã„â€˜Ã¡Â»â„¢ng tÃ¡Â»Â« API SePay: id, sÃ¡Â»â€˜ tiÃ¡Â»Â\x81n, nÃ¡Â»â„¢i dung, tham chiÃ¡ÂºÂ¿uÃ¢â‚¬Â¦",
            },
        ),
        migrations.CreateModel(
            name="PaySepayWebhookEvent",
            fields=[
                (
                    "webhook_event_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "sepay_tx_id",
                    models.BigIntegerField(
                        db_comment="ID duy nhÃ¡ÂºÂ¥t tÃ¡Â»Â« SePay Ã„â€˜Ã¡Â»Æ’ idempotent (trÃƒÂ¡nh xÃ¡Â»Â\xad lÃƒÂ½ trÃƒÂ¹ng)",
                        unique=True,
                    ),
                ),
                ("received_at", models.DateTimeField(auto_now_add=True)),
                (
                    "payload",
                    models.JSONField(
                        db_comment="LÃ†Â°u nguyÃƒÂªn phÃ¡ÂºÂ§n thÃƒÂ¢n webhook Ã„â€˜Ã¡Â»Æ’ debug/Ã„â€˜Ã¡Â»â€˜i soÃƒÂ¡t"
                    ),
                ),
                (
                    "processed",
                    models.BooleanField(
                        db_comment="Ã„Â\x90ÃƒÂ£ xÃ¡Â»Â\xad lÃƒÂ½ phÃƒÂ¡t sinh payment/ledger chÃ†Â°a",
                        default=False,
                    ),
                ),
                (
                    "process_error",
                    models.TextField(
                        blank=True,
                        db_comment="ThÃƒÂ´ng tin lÃ¡Â»â€”i nÃ¡ÂºÂ¿u xÃ¡Â»Â\xad lÃƒÂ½ thÃ¡ÂºÂ¥t bÃ¡ÂºÂ¡i",
                        null=True,
                    ),
                ),
            ],
            options={
                "db_table": "pay_sepay_webhook_events",
                "db_table_comment": "Inbox webhook cÃ¡Â»Â§a SePay. Ta luÃƒÂ´n lÃ†Â°u thÃƒÂ´ trÃ†Â°Ã¡Â»â€ºc, sau Ã„â€˜ÃƒÂ³ mÃ¡Â»â€ºi parse vÃƒÂ\xa0 xÃ¡Â»Â\xad lÃƒÂ½ Ã„â€˜Ã¡Â»Æ’ Ã„â€˜Ã¡ÂºÂ£m bÃ¡ÂºÂ£o an toÃƒÂ\xa0n.",
                "indexes": [
                    models.Index(
                        fields=["sepay_tx_id"], name="idx_sepay_webhooks_tx_id"
                    ),
                    models.Index(
                        fields=["processed"], name="idx_sepay_webhooks_processed"
                    ),
                    models.Index(
                        fields=["received_at"], name="idx_sepay_webhooks_received"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="PaySymbolOrder",
            fields=[
                (
                    "order_id",
                    models.UUIDField(
                        db_comment="ID Ã„â€˜Ã†Â¡n hÃƒÂ\xa0ng",
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "total_amount",
                    models.DecimalField(
                        db_comment="TÃ¡Â»â€¢ng tiÃ¡Â»Â\x81n cÃ¡ÂºÂ§n trÃ¡ÂºÂ£ cho Ã„â€˜Ã†Â¡n",
                        decimal_places=2,
                        max_digits=18,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending_payment", "Pending Payment"),
                            ("paid", "Paid"),
                            ("failed", "Failed"),
                            ("cancelled", "Cancelled"),
                            ("refunded", "Refunded"),
                        ],
                        db_comment="TrÃ¡ÂºÂ¡ng thÃƒÂ¡i vÃƒÂ²ng Ã„â€˜Ã¡Â»Â\x9di Ã„â€˜Ã†Â¡n",
                        default="pending_payment",
                        max_length=20,
                    ),
                ),
                (
                    "payment_method",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("wallet", "Wallet Balance"),
                            ("sepay_transfer", "SePay Transfer (QR/Bank)"),
                        ],
                        db_comment="wallet (trÃ¡Â»Â« vÃƒÂ\xad) hoÃ¡ÂºÂ·c sepay_transfer (QR/STK)",
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        db_comment="MÃƒÂ´ tÃ¡ÂºÂ£/ghi chÃƒÂº Ã„â€˜Ã†Â¡n hÃƒÂ\xa0ng",
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "payment_intent",
                    models.ForeignKey(
                        blank=True,
                        db_comment="Payment intent cho SePay transfer",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="seapay.paypaymentintent",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        db_comment="NgÃ†Â°Ã¡Â»Â\x9di mua quyÃ¡Â»Â\x81n truy cÃ¡ÂºÂ\xadp symbol",
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "pay_symbol_orders",
                "db_table_comment": "Ã„Â\x90Ã†Â¡n hÃƒÂ\xa0ng Ã„â€˜Ã¡Â»Æ’ mua quyÃ¡Â»Â\x81n truy cÃ¡ÂºÂ\xadp symbol. CÃƒÂ³ thÃ¡Â»Æ’ thanh toÃƒÂ¡n trÃ¡Â»Â±c tiÃ¡ÂºÂ¿p qua SePay hoÃ¡ÂºÂ·c trÃ¡Â»Â« vÃƒÂ\xad nÃ¡ÂºÂ¿u Ã„â€˜ÃƒÂ£ nÃ¡ÂºÂ¡p.",
            },
        ),
        migrations.AddField(
            model_name="paypaymentintent",
            name="order",
            field=models.ForeignKey(
                blank=True,
                db_comment="LiÃƒÂªn kÃ¡ÂºÂ¿t nÃ¡ÂºÂ¿u lÃƒÂ\xa0 thanh toÃƒÂ¡n Ã„â€˜Ã†Â¡n",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="seapay.paysymbolorder",
            ),
        ),
        migrations.AddField(
            model_name="paypayment",
            name="order",
            field=models.ForeignKey(
                blank=True,
                db_comment="Ã„Â\x90Ã†Â¡n hÃƒÂ\xa0ng liÃƒÂªn quan (nÃ¡ÂºÂ¿u cÃƒÂ³)",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="seapay.paysymbolorder",
            ),
        ),
        migrations.CreateModel(
            name="PaySymbolOrderItem",
            fields=[
                (
                    "order_item_id",
                    models.UUIDField(
                        db_comment="ID item Ã„â€˜Ã†Â¡n hÃƒÂ\xa0ng",
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "symbol_id",
                    models.BigIntegerField(
                        db_comment="Symbol lÃƒÂ\xa0 sÃ¡ÂºÂ£n phÃ¡ÂºÂ©m Ã„â€˜Ã†Â°Ã¡Â»Â£c bÃƒÂ¡n"
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        db_comment="Ã„Â\x90Ã†Â¡n giÃƒÂ¡ tÃ¡ÂºÂ¡i thÃ¡Â»Â\x9di Ã„â€˜iÃ¡Â»Æ’m mua",
                        decimal_places=2,
                        max_digits=18,
                    ),
                ),
                (
                    "license_days",
                    models.IntegerField(
                        blank=True,
                        db_comment="SÃ¡Â»â€˜ ngÃƒÂ\xa0y cÃ¡ÂºÂ¥p quyÃ¡Â»Â\x81n sÃ¡Â»Â\xad dÃ¡Â»Â¥ng symbol; null = trÃ¡Â»Â\x8dn Ã„â€˜Ã¡Â»Â\x9di",
                        null=True,
                    ),
                ),
                (
                    "auto_renew",
                    models.BooleanField(
                        db_comment="Mark this order item as enrolled in auto-renew",
                        default=False,
                    ),
                ),
                (
                    "cycle_days_override",
                    models.PositiveIntegerField(
                        blank=True,
                        db_comment="Override renewal cycle in days; None uses subscription default",
                        null=True,
                    ),
                ),
                (
                    "auto_renew_price",
                    models.DecimalField(
                        blank=True,
                        db_comment="Override price for subsequent renewals; None uses current price",
                        decimal_places=2,
                        max_digits=18,
                        null=True,
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True,
                        db_comment="ThuÃ¡Â»â„¢c tÃƒÂ\xadnh thÃƒÂªm (phiÃƒÂªn bÃ¡ÂºÂ£n, biÃ¡ÂºÂ¿n thÃ¡Â»Æ’, ...)",
                        default=dict,
                    ),
                ),
                (
                    "order",
                    models.ForeignKey(
                        db_comment="Ã„Â\x90Ã†Â¡n hÃƒÂ\xa0ng chÃƒÂ\xadnh",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="seapay.paysymbolorder",
                    ),
                ),
            ],
            options={
                "db_table": "pay_symbol_order_items",
                "db_table_comment": "Chi tiÃ¡ÂºÂ¿t tÃ¡Â»Â«ng dÃƒÂ²ng sÃ¡ÂºÂ£n phÃ¡ÂºÂ©m trong Ã„â€˜Ã†Â¡n: symbol nÃƒÂ\xa0o, thÃ¡Â»Â\x9di hÃ¡ÂºÂ¡n bao lÃƒÂ¢u.",
            },
        ),
        migrations.CreateModel(
            name="PayUserSymbolLicense",
            fields=[
                (
                    "license_id",
                    models.UUIDField(
                        db_comment="ID license",
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "symbol_id",
                    models.BigIntegerField(
                        db_comment="Symbol Ã„â€˜Ã†Â°Ã¡Â»Â£c cÃ¡ÂºÂ¥p quyÃ¡Â»Â\x81n"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("expired", "Expired"),
                            ("suspended", "Suspended"),
                            ("revoked", "Revoked"),
                        ],
                        db_comment="TrÃ¡ÂºÂ¡ng thÃƒÂ¡i quyÃ¡Â»Â\x81n dÃƒÂ¹ng symbol",
                        default="active",
                        max_length=20,
                    ),
                ),
                (
                    "start_at",
                    models.DateTimeField(
                        db_comment="ThÃ¡Â»Â\x9di Ã„â€˜iÃ¡Â»Æ’m kÃƒÂ\xadch hoÃ¡ÂºÂ¡t",
                        default=django.utils.timezone.now,
                    ),
                ),
                (
                    "end_at",
                    models.DateTimeField(
                        blank=True,
                        db_comment="ThÃ¡Â»Â\x9di Ã„â€˜iÃ¡Â»Æ’m hÃ¡ÂºÂ¿t hÃ¡ÂºÂ¡n; null = trÃ¡Â»Â\x8dn Ã„â€˜Ã¡Â»Â\x9di",
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "order",
                    models.ForeignKey(
                        blank=True,
                        db_comment="Ã„Â\x90Ã†Â¡n hÃƒÂ\xa0ng tÃ¡ÂºÂ¡o ra license nÃƒÂ\xa0y",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="seapay.paysymbolorder",
                    ),
                ),
            ],
            options={
                "db_table": "pay_user_symbol_licenses",
                "db_table_comment": "QuyÃ¡Â»Â\x81n sÃ¡Â»Â\xad dÃ¡Â»Â¥ng symbol Ã„â€˜Ã¡Â»Æ’ quyÃ¡ÂºÂ¿t Ã„â€˜Ã¡Â»â€¹nh ai Ã„â€˜Ã†Â°Ã¡Â»Â£c nhÃ¡ÂºÂ\xadn tÃƒÂ\xadn hiÃ¡Â»â€¡u.",
            },
        ),
    ]
